/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from "react";
import { useGLTF, Line } from "@react-three/drei";
import * as THREE from "three";
import { useStore } from "../store";

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/model.glb");

  const { setSelectedText, setSelectedLabel, lightMode } = useStore(
    (state) => state
  );

  const material = useMemo(
    () =>
      new THREE.MeshBasicMaterial({
        color: "lime",
        transparent: true,
        opacity: 0.5,
      }),
    []
  );

  const material2 = useMemo(
    () =>
      new THREE.MeshBasicMaterial({
        color: "white",
      }),
    []
  );

  const material3 = useMemo(
    () =>
      new THREE.MeshBasicMaterial({
        color: "black",
      }),
    []
  );

  const material4 = useMemo(
    () =>
      new THREE.MeshBasicMaterial({
        color: "red",
      }),
    []
  );
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Plane.geometry}
        material={!lightMode ? materials["Material.001"] : material2}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={
          !props.hidden ? (!lightMode ? material : material3) : material4
        }
      />
      {props.exits.map((e, i) => {
        // Points element -->
        let points = [[0, 0, 0]];

        switch (e[1]) {
          case 0:
            points = [
              [0, 0, -0.8],
              [0, 0, -1.5],
            ];
            break;
          case 90:
            points = [
              [0.8, 0, 0],
              [1.5, 0, 0],
            ];
            break;
          case 180:
            points = [
              [0, 0, 0.8],
              [0, 0, 1.5],
            ];
            break;
          case 270:
            points = [
              [-0.8, 0, 0],
              [-1.5, 0, 0],
            ];
            break;
        }

        return (
          <Line
            key={i}
            points={points}
            position={[0, 0.1, 0]}
            color={!lightMode ? `#32CD32` : `black`}
            lineWidth={3}
          />
        );
      })}
    </group>
  );
}

useGLTF.preload("/model.glb");
